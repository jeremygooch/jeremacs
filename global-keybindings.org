#+TITLE: Custom Global Keybindings
:PROPERTIES:
#+AUTHOR: Jeremy Gooch
#+STARTUP: overview
#+PROPERTY: header-args :results silent :tangle ~/.emacs.d/init.keybindings.el
:END:

* Setup my own global key binding prefix
#+begin_src emacs-lisp
  (progn (define-prefix-command 'jrm-key-map))
  (global-set-key (kbd "C-x C-j") jrm-key-map)
#+end_src

* Buffers
#+begin_src emacs-lisp
  (global-set-key (kbd "C-o") 'other-window)
  (define-key dired-mode-map (kbd "C-o") 'other-window)
  (define-key rg-mode-map (kbd "C-o") 'other-window)
  (define-key grep-mode-map (kbd "C-o") 'other-window)
#+end_src
* Adjust Font Size
#+begin_src emacs-lisp
  (global-set-key (kbd "C-x C-j p")  'jrm/adjust-font-size)
#+end_src
* Revert Buffer
#+begin_src emacs-lisp
  (global-set-key (kbd "s-u") '(lambda () (interactive) (revert-buffer t (not (buffer-modified-p)) t)))
#+end_src
* Frames
#+begin_src emacs-lisp
(global-set-key (kbd "<f9>") 'other-frame)
#+end_src

* Navigation
** Line Numbers (linum)
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-c l l") 'display-line-numbers-mode)
#+END_SRC

** Frame Navigation
#+begin_src emacs-lisp
(global-set-key (kbd "<f9>") 'other-frame)
#+end_src
* Ibuffer
#+begin_src emacs-lisp
(global-set-key (kbd "C-x C-b") 'ibuffer)
#+end_src
* VTerm
For some reason, using a setq or the :config or :custom keyword in  use-package does not set the variable correctly for vterm. Resorting to custom-set-variables.
#+begin_src emacs-lisp :tangle no
  (custom-set-variables
   '(vterm-keymap-exceptions (push "<f9>" vterm-keymap-exceptions))
   '(vterm-keymap-exceptions (push "C-o" vterm-keymap-exceptions)))
  (define-key vterm-mode-map (kbd "C-q") #'vterm-send-next-key)
#+end_src
* Mark ring
Adjust the local mark ring pop key sequence, so after pressing `C-u C-SPC`, you can just press `C-SPC` to keep jumping.
#+BEGIN_SRC emacs-lisp
  (setq set-mark-command-repeat-pop t)
#+END_SRC
* Priority Keys
Setup custom minor mode so keybindings can be turned on/off easily. This is helpful as some major modes want to use these keybindings but I would rather have them bound to custom functions by default, but =global-set-key= doesn't take priority when a major mode specifies custom bindings. See: https://stackoverflow.com/questions/683425/globally-override-key-binding-in-emacs
#+begin_src emacs-lisp
  (defvar jrm-keys-minor-mode-map
    (let ((map (make-sparse-keymap)))

      ;; Navigation
      (define-key map (kbd "M-n") 'forward-paragraph)
      (define-key map (kbd "M-p") 'backward-paragraph)
      map)
    "Jrm keys minor mode keyap.")

  (define-minor-mode jrm-keys-minor-mode
    "A minor mode so that my key bindings override annoying major modes."
    :init-value t
    :lighter " jrm-keys")
  (jrm-keys-minor-mode 1)

  ;; Don't show minor mode in minibuffer
  (defun jrm-minibuffer-setup-hook ()
    (jrm-keys-minor-mode 0))
  (add-hook 'minibuffer-setup-hook 'jrm-minibuffer-setup-hook)

#+end_src
